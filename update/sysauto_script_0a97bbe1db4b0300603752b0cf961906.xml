<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <condition/>
        <conditional>false</conditional>
        <name>Import Git Issues</name>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period>1970-01-01 00:05:00</run_period>
        <run_start>2017-12-15 15:14:51</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>periodically</run_type>
        <script><![CDATA[var getUrl = new GlideRecord('x_82093_github_git_repository');
getUrl.query();

while(getUrl.next()) {
	
	gs.info("Repo Name: " + getUrl.repository_url.repository_name + "\n\n URL: " + getUrl.repository_url.repository_url);
	
	//Call GitHub REST service
	var r = new sn_ws.RESTMessageV2('GitHub', 'getIssues');
	r.setStringParameterNoEscape('Issues_URL', getUrl.repository_url.repository_url + "/issues");
	
	//override authentication profile
	r.setAuthenticationProfile('basic', getUrl.repository_credentials);
	
	//Get response from REST
	var response = r.execute();
	var responseBody = response.getBody();
	var httpStatus = response.getStatusCode();
	
	// Extract values from REST Message response
	var jsonParse = JSON.parse(responseBody);
	var length = jsonParse.length;
	
	//Loop through response
	for(var v=0;v<length;v++){
		var title = jsonParse[v].title;
		var description = jsonParse[v].body;
		var url = jsonParse[v].html_url;
		var comment_count = parseInt(jsonParse[v].comments);
		//gs.info("Issue #"+jsonParse[v].number + "\n Title: " + title + "\n URL: " + url);
				
		var user = "";
		if(jsonParse[v].assignee){
			var gitUser = new GlideRecord('x_82093_github_git_users');
			gitUser.addEncodedQuery("github_username="+jsonParse[v].assignee.login);
			gitUser.query();
			
			if(gitUser.next()){
				user = gitUser.servicenow_user;
			}
		}
		
		var gr = new GlideRecord('x_82093_github_git_issues');
		gr.addEncodedQuery("git_issue_number="+jsonParse[v].number);
		gr.query();
		
		if(gr.next()){
			
			if(comment_count > 0){
				//add_comments(gr, jsonParse[v].comments_url, getUrl.repository_credentials);
			}
			
			//gr.work_notes = "Comment Count: " + comment_count;
			gr.short_description = title;
			gr.description = description;
			gr.git_issue_link = url;
			if(user){
				gr.assigned_to = user;
			}
			gr.source_repository = getUrl.sys_id;
			gr.update();
		}
		else {
			gr.initialize();
			gr.git_issue_number = jsonParse[v].number;
			
			if(comment_count > 0){
				//add_comments(gr, jsonParse[v].comments_url, getUrl.repository_credentials);
			}
			
			//gr.work_notes = "Comment Count: " + comment_count;
			gr.short_description = title;
			gr.description = description;
			gr.git_issue_link = url;
			if(user){
				gr.assigned_to = user;
			}
			gr.source_repository = getUrl.sys_id;
			gr.insert();
		}
	}
}

function add_comments(db_comm, comm_url, profile_name) {
	
	var r2 = new sn_ws.RESTMessageV2('GitHub', 'getComments');
	r2.setStringParameterNoEscape('comment_url', comm_url);
	
	//override authentication profile
	r2.setAuthenticationProfile('basic', profile_name);
	
	var response_comm = r2.execute();
	var responseBody_comm = response_comm.getBody();
	var httpStatus_comm = response_comm.getStatusCode();
	
	// Extract latitude and longitude values from REST Message response
	var jsonParse_comm = JSON.parse(responseBody_comm);
	
	var i = 0;
	while(i < comment_count){
		
		var notes = db_comm.work_notes.getJournalEntry(-1);
		if(notes.toString().indexOf(jsonParse_comm[i].id) < 0){
			var comment = jsonParse_comm[i].body;
			comment += " id:"+jsonParse_comm[i].id;
			db_comm.work_notes = comment;
		}
		
		i += 1;
	}
	
	//return db_comm;
}
]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-15 15:57:28</sys_created_on>
        <sys_id>0a97bbe1db4b0300603752b0cf961906</sys_id>
        <sys_mod_count>89</sys_mod_count>
        <sys_name>Import Git Issues</sys_name>
        <sys_package display_value="GITHub" source="x_82093_github">600a2b51db830300603752b0cf96195c</sys_package>
        <sys_policy/>
        <sys_scope display_value="GITHub">600a2b51db830300603752b0cf96195c</sys_scope>
        <sys_update_name>sysauto_script_0a97bbe1db4b0300603752b0cf961906</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-12-22 19:18:28</sys_updated_on>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
